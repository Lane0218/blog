{"posts":[{"title":"数据结构与算法大作业：模拟银行","text":"​本项目的题目、代码和实验报告已上传至GitHub本文同步发表于我的CSDN博客如果对你有帮助，欢迎点亮Star。 题目内容1. VIP窗口在原有代码基础上添加VIP窗口功能，VIP窗口的出纳员只服务VIP用户，当VIP用户到达后可以在本窗口按照到达先后顺序等待。 约定 约定1号出纳员所在的1号窗口为VIP窗口，且银行中只有一个VIP窗口。 约定普通用户只能在普通窗口排队等候，其选择窗口的优先级为：空普通窗口&gt;非空普通窗口。 约定用户排队过程中选定窗口后就会一直在该队列中等待，不会更换排队队伍。 约定用户之间无法感知对方是处理何种业务，不知道其业务所需的具体时间和剩余时间。 约定模拟时间外不产生用户到达事件，但是银行将会处理完所有用户到达事件。 第一问（10分） 约定 约定VIP用户可以在普通窗口和VIP窗口排队等候，其选择窗口的优先级为：空VIP窗口&gt;空普通窗口&gt;非空VIP窗口&gt;非空普通窗口。 本小题第一问将在去掉到达时间与服务时间随机化的情况下，对同学们的代码进行正确性验证。验证内容是增设VIP窗口对服务情况产生的影响。请同学们按照如下提示修改代码： 12345678910111213// event.henum isVip {notVip, Vip};struct event{...isVip isvip;...};// event.hInitEvent(...)CompareEvent(...)// ...... 以下文所示输入为例，时间处于0、4、8时分别到达一名随机身份的顾客，银行将安排窗口为顾客服务。对于8时到来的VIP用户，他所面临的的情况：在增设VIP窗口前，不区分顾客身份服务，8时到来的顾客面对两个非空串口的情况下将会选择随机选择一个窗口进行服务，VIP身份没有获得收益；在增设VIP窗口后，VIP用户在某些情况下可以比普通用户更快受到服务。 12345./bankEnter the simulation time in minutes: 10Enter the number of bank tellers: 2Enter the range of arrival times in minutes: 4 4Enter the range of service times in minutes: 9 9 分析下表（繁忙程度=实际服务时间/总服务时间）： 第二问（30分） 约定 约定VIP用户可以在VIP窗口排队等候，或者在普通窗口队列中插队。（即排到普通窗口队列最前面） 约定插队的VIP用户在普通窗口中按照到达顺序先后进行排队。 约定VIP用户选择窗口的优先级为：空VIP窗口&gt;空普通窗口&gt;插队到普通窗口队列。 编程实现功能，不给出测试用例。 2. VIP限时等待 约定 约定只有出纳员服务完当前用户后，才会重新计算所有排队的用户中的VIP用户的等待时间，如果等待时间已到达最长等待时间，将优先服务等待时间长的VIP用户。 约定等待时间满的VIP顾客，可以更换柜台服务。即所有柜台出纳员会按照等待时间由长到短的顺序服务所有队列中的VIP用户。（对于VIP用户而言，打破最初不能更换队伍的约定） 无VIP窗口情况下，银行规定，VIP用户等待时间不得超过X分钟，VIP用户与普通用户之间设置排队策略。 请同学们按照如下提示修改代码，使得VIP用户最多等待waitHigh时间。注意：出纳员只需要照顾本队列中的VIP用户。 12printf(&quot;Enter the longest waitting time the customer can tolerate in minutes: &quot;);scanf(&quot;%d&quot;, &amp;s-&gt;waitHigh); 第一问（40分）实现功能 3. 最佳排队机制（20分，酌情加分）提示：如何决定三种等待时间的重要性？如何赋予不同的权重？如何在不同的权重设置下实现适宜的排队机制？请根据实验数据进行情况讨论。本题为开放性思考题。综合考虑各类角色等待时间：被VIP插队的用户越多，普通用户越不满；VIP等待的时间越长，VIP越不满；有人排队但有窗口闲置时，银行不满。请通过实验数据说明如何设置排队机制可能是最优的。建议：参考题目设置，逐步放开随机化的元素进行分析，可站在用户的角度或者银行的角度说明。（请认真作答，自圆其说，合乎情理即可） 实验报告","link":"/2024/09/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%A4%A7%E4%BD%9C%E4%B8%9A%EF%BC%9A%E6%A8%A1%E6%8B%9F%E9%93%B6%E8%A1%8C/"},{"title":"数据结构与算法大作业：药店卖药","text":"​本项目的代码和数据已上传至GitHub 本文同步发表于我的CSDN博客 如果对你有帮助，欢迎点亮Star 题目 实验背景 你是一家药店的老板，这个月你从供货商手里收到了一批共50个药品，其中每个药品有独立的进价和保质期，其中进价的区间为[20,30]元，保质期的剩余天数为[1,15]天。 你每天可以陈列出10个药品在商店中售卖，每天会有三个顾客各过来购买一个药品。 药品的定价只能为商品进价加上{-1.5,-1, -0.5, 0, 2 ,4 ,6}元，不得随意定价。 每位顾客购买的逻辑是，买其中最便宜的药品，如果说最便宜的药品价格一致则购买保质期⻓的药品。三位顾客会依次购买药品。药品如果没有陈列在商店中，而是存放在仓库时，会收取管理费，其中保质期低于5天的每天收取1元管理费，其余的每天收取0.5元。每天的陈列药品可以少于10个。 你的目标是，10天之后，你的利润（售出商品售价总和-售出商品进价总和-支付仓库的管理费用-10天内过期/丢弃商品的进价）最大。 实验要求 能够完整的模拟整个流程，给定药品的进价以及保质期，给定每天陈列的药品，可以直接得到商家的利润； 能够自己制定每天展示的药品策略，给定一定的进价和保质期的药品，能够自己指定策略，得到利润； 代码逻辑清晰，条理清楚； 代码如有抄袭，双方都按照0分处理。 验收步骤 模拟流程（60分） 该步骤需要同学们能够模拟商家和顾客的行为，正确的得到收益。 我们会给出10个测试用例，每个测试用例中包含两个文件，一个是药品的文件（内含50行，每行包含进价和保质期）， 药品id按照输入顺序从0~49；另一个是每天的策略（内含10行，每行包含10组数据，每组数据中包含一个药品的id，和定价列表的索引，id=-1代表空缺）；第三个文件中包含每天要丢弃的药品，内含N行，每行中包含两个数字，第一个是指第几天，第二个是指丢弃的药品索引 最好能写在命令行参数中，如下： 12./drugstore.exe -m ../data/data1/medicine.txt -s ../data/data1/strategy.txt -ddelete.txt 测试流程（40分） 该过程需要同学们自己制定每天卖出的策略，得到自认为收益最好的方法 要求策略能够正确的实施，要能够将策略输出到文件，输出的格式与第一步给出的策略的格式要一样， 除了要输出每天要指定的策略，还要输出每天要丢弃的药品列表，同样如流程一中的文件格式 该步骤一样会给10个用例，该步骤的得分主要依据教辅给定收益，对于每个用例，如果可以超过教辅的收益，可得4分，否则： 3.5×(1−教辅的收益−你的收益∣教辅的收益∣)3.5 \\times(1-\\frac{教辅的收益-你的收益}{\\left | 教辅的收益 \\right |})3.5×(1−∣教辅的收益∣教辅的收益−你的收益​) 请同学们在实验报告中列张表，说明自己的收益与教辅收益的差别。同样希望同学们能在命令行参数实现相关功能，如下： 12./drugstore.exe -m ../data/data1/medicine.txt -ws ../data/data1/strategy.txt -wd../data/data1/delete.txt 实验报告","link":"/2024/09/19/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%A4%A7%E4%BD%9C%E4%B8%9A%EF%BC%9A%E8%8D%AF%E5%BA%97%E5%8D%96%E8%8D%AF/"}],"tags":[],"categories":[{"name":"实验","slug":"实验","link":"/categories/%E5%AE%9E%E9%AA%8C/"},{"name":"数据结构与算法","slug":"实验/数据结构与算法","link":"/categories/%E5%AE%9E%E9%AA%8C/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"}],"pages":[]}