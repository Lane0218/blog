{"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2024/09/17/hello-world/"},{"title":"lane中文test","text":"第一章 绪论计算机网络概念与组成 计算机网络定义 指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统、网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统 网络组成 网络边缘 端系统：位于互联网边缘与互联网相连的计算机和其他设备（台式机、移动计算机、其他智能终端设备、服务器） 客户端：各类主机 服务器：通常部署在数据中心 网络核心 由互联端系统的分组交换设备和通信链路构成的网状网络 分组交换设备：路由器、链路层交换机 通信链路：光纤、铜缆、无线电、激光链路等 协议（三要素） 语法：规定传输数据的格式（如何讲） 语义：规定所要完成的功能（讲什么） 时序：规定各种操作的顺序（双方讲话的顺序） 互联网服务提供商ISP 为用户提供互联网接入服务 ISP之间相互转发报文 域内路由和域间路由 网络服务 互联网是为网络应用提供通信服务的基础设施 互联网提供两种通信服务： 可靠服务：TCP 不可靠服务：UDP 接入网 将终端连接到其边缘路由器的物理链路（边缘路由器是端系统去往任何其它远程端系统的路径上的第一台路由器） 网络核心 网络、互联网、因特网 互联网：网络的网络 因特网：世界上最大互联网 端系统直接连接到的是接入ISP，要实现端系统间通信，接入ISP必须相互连接，由此形成的网络的网络，即因特网(Internet) 数据交换方式 电路交换 带宽和时延有保证：建立连接并预留资源 线路的传输效率低：物理通路被通信双方独占，即使空闲也不与其他连接共享 如果传输中发生设备故障，则传输被中断 分组交换 优点 没有建立连接和释放连接的过程 分组传输过程中逐段占用通信链路，有较高的通信线路利用率 交换节点可以为每一个分组独立选择转发路由，使得网络有很好的生存性 缺点 分组首部带来了额外的传输开销 交换节点存储转发分组会造成一定的时延：分组交换机需要接收到完整的整个数据分组后，才能开始向下一跳发送 无法确保通信时端到端通信资源全部可用，在通信量较大时可能造成网络拥塞 分组可能会出现失序和丢失等问题 网络性能指标及分层模型 分组交换网络性能指标 时延 处理时延 检查分组首部 确定输出链路 检查比特错误 微秒或更低量级 排队时延 在缓存队列中等待被传输 时间长短取决于队列前方等待传输的分组数量 毫秒到微秒量级 流量强度 = $\\frac{La}{R}$ （a: 分组到达速率） &gt; 1 平均时延趋于无穷大 &lt; 1 排队时延与流量性质相关 突发式流量，平均排队时延显著增加 周期性流量，排队时延较小 传输时延 将分组发送到链路上所需时间 $d_{trans} = \\frac{L}{R}$ 微秒~毫秒，低速链路上较大 传播时延 信号在链路上传播所需时间 $d_{prop} = \\frac{d}{s}$ 几微秒~几百毫秒，长距离链路上较大 丢包率 在一定的时间范围内，传输过程中丢失的分组数量与总分组数量的比率。 丢包原因 分组到达速率超过输出链路的传输速率 数据错误（误码） 吞吐量 发送端和接收端之间的比特传输速率 瓶颈链路：在端到端路径上，限制端到端吞吐量的通信链路 协议分层模型（五层模型） 数据单元 协议数据单元（Protocol Data Unit，PDU）：对等层次之间传送的数据包 服务数据单元（Service Data Unit，SDU）：同一系统内层与层之间交换的数据包称为 链路层概述与差错检测 链路层 节点：主机、路由器、交换机等 链路（Link）：从一个节点到相邻节点的一段物理线路（有线或无线），而中间没有任何其他的交换节点 有线链路 无线链路 交换局域网 帧（frame）：封装网络层数据报 头标（Header） 尾标（Trailer） 有效载荷 封装成帧和透明传输 字节计数法（ Byte count ） 带字节填充的定界符法（ Flag bytes with byte stuffing ） 定界符（FLAG）：一个特殊的字节，比如 01111110，即 0x7E 发送方：采用ESC作为转义符（转义字节），对帧内FLAG进行转义 接收方：逐个检查收到的每一个字节，收到ESC，则后一字节无条件成为有效载荷，不予检查 带比特填充的定界符法（ Flag bits with bit stuffing ） 定界符：两个0比特之间，连续6个1比特，即01111110，0x7E 发送方：检查有效载荷，若在有效载荷中出现连续5个1比特，则直接插入1个0比特 接收方：若出现连续5个1比特 若下一比特为0，则为有效载荷，直接丢弃0比特 若下一比特为1，则连同后一比特的0，构成定界符，一帧结束 差错检测与纠正：EDC (error-detection and-correction ) ：差错检测和纠错比特 检错码：不能推断哪位发生错误 奇偶校验(Parity Check)：增加1位校验位 偶校验：保证1的个数为偶数 循环冗余校验（Cyclic Redundancy Check，CRC） 收发双方约定n+1位二进制位模式G(X) (称为生成多项式)，G的最高位和最低位为1 发送方：基于待发送的数据和生成多项式G(X)，计算出差错检测码（冗余码），将冗余码添加到待发送数据的后面一起传输 接收方：收到数据和冗余码后，通过生成多项式G(X)来计算收到的数据和冗余码是否产生了误码 纠错码：定位出错的位置 二维奇偶校验 海明码（Hamming Code） 本质上是多重分组奇偶校验 以太网与卫星无线链路的比较 以太网 可靠率高、误码率低 传输速度快，时延低 重点关注传输速度 差错检测技术 卫星无线 可靠率较低、误码率较高 传输时延大，重传代价大 重点关注传输可靠性 差错纠正技术","link":"/2024/09/17/lane%E4%B8%AD%E6%96%87test/"},{"title":"数据结构与算法大作业：模拟银行","text":"​本项目的题目、代码和实验报告已上传至GitHub本文同步发表于我的CSDN博客如果对你有帮助，欢迎点亮Star。 题目内容1. VIP窗口在原有代码基础上添加VIP窗口功能，VIP窗口的出纳员只服务VIP用户，当VIP用户到达后可以在本窗口按照到达先后顺序等待。 约定 约定1号出纳员所在的1号窗口为VIP窗口，且银行中只有一个VIP窗口。 约定普通用户只能在普通窗口排队等候，其选择窗口的优先级为：空普通窗口&gt;非空普通窗口。 约定用户排队过程中选定窗口后就会一直在该队列中等待，不会更换排队队伍。 约定用户之间无法感知对方是处理何种业务，不知道其业务所需的具体时间和剩余时间。 约定模拟时间外不产生用户到达事件，但是银行将会处理完所有用户到达事件。 第一问（10分） 约定 约定VIP用户可以在普通窗口和VIP窗口排队等候，其选择窗口的优先级为：空VIP窗口&gt;空普通窗口&gt;非空VIP窗口&gt;非空普通窗口。 本小题第一问将在去掉到达时间与服务时间随机化的情况下，对同学们的代码进行正确性验证。验证内容是增设VIP窗口对服务情况产生的影响。请同学们按照如下提示修改代码： 12345678910111213// event.henum isVip {notVip, Vip};struct event{...isVip isvip;...};// event.hInitEvent(...)CompareEvent(...)// ...... 以下文所示输入为例，时间处于0、4、8时分别到达一名随机身份的顾客，银行将安排窗口为顾客服务。对于8时到来的VIP用户，他所面临的的情况：在增设VIP窗口前，不区分顾客身份服务，8时到来的顾客面对两个非空串口的情况下将会选择随机选择一个窗口进行服务，VIP身份没有获得收益；在增设VIP窗口后，VIP用户在某些情况下可以比普通用户更快受到服务。 12345./bankEnter the simulation time in minutes: 10Enter the number of bank tellers: 2Enter the range of arrival times in minutes: 4 4Enter the range of service times in minutes: 9 9 分析下表（繁忙程度=实际服务时间/总服务时间）： 第二问（30分） 约定 约定VIP用户可以在VIP窗口排队等候，或者在普通窗口队列中插队。（即排到普通窗口队列最前面） 约定插队的VIP用户在普通窗口中按照到达顺序先后进行排队。 约定VIP用户选择窗口的优先级为：空VIP窗口&gt;空普通窗口&gt;插队到普通窗口队列。 编程实现功能，不给出测试用例。 2. VIP限时等待 约定 约定只有出纳员服务完当前用户后，才会重新计算所有排队的用户中的VIP用户的等待时间，如果等待时间已到达最长等待时间，将优先服务等待时间长的VIP用户。 约定等待时间满的VIP顾客，可以更换柜台服务。即所有柜台出纳员会按照等待时间由长到短的顺序服务所有队列中的VIP用户。（对于VIP用户而言，打破最初不能更换队伍的约定） 无VIP窗口情况下，银行规定，VIP用户等待时间不得超过X分钟，VIP用户与普通用户之间设置排队策略。 请同学们按照如下提示修改代码，使得VIP用户最多等待waitHigh时间。注意：出纳员只需要照顾本队列中的VIP用户。 12printf(&quot;Enter the longest waitting time the customer can tolerate in minutes: &quot;);scanf(&quot;%d&quot;, &amp;s-&gt;waitHigh); 第一问（40分）实现功能 3. 最佳排队机制（20分，酌情加分）提示：如何决定三种等待时间的重要性？如何赋予不同的权重？如何在不同的权重设置下实现适宜的排队机制？请根据实验数据进行情况讨论。本题为开放性思考题。综合考虑各类角色等待时间：被VIP插队的用户越多，普通用户越不满；VIP等待的时间越长，VIP越不满；有人排队但有窗口闲置时，银行不满。请通过实验数据说明如何设置排队机制可能是最优的。建议：参考题目设置，逐步放开随机化的元素进行分析，可站在用户的角度或者银行的角度说明。（请认真作答，自圆其说，合乎情理即可） 实验报告","link":"/2024/09/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%A4%A7%E4%BD%9C%E4%B8%9A%EF%BC%9A%E6%A8%A1%E6%8B%9F%E9%93%B6%E8%A1%8C/"}],"tags":[],"categories":[{"name":"测试","slug":"测试","link":"/categories/%E6%B5%8B%E8%AF%95/"},{"name":"笔记","slug":"笔记","link":"/categories/%E7%AC%94%E8%AE%B0/"},{"name":"实验","slug":"实验","link":"/categories/%E5%AE%9E%E9%AA%8C/"},{"name":"数据结构与算法","slug":"实验/数据结构与算法","link":"/categories/%E5%AE%9E%E9%AA%8C/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"}],"pages":[]}